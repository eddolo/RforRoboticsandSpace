RforRoboticsandSpace
Resetability (R) on SO(3): A Two-Pass Scaled Replay Primitive for Fast Attitude Recovery in Robots and Spacecraft

Author: Paolo Cappuccini – Independent Researcher
Collaborator: GPT-5 (AI Research Assistant)

🛰️ Overview

This repository contains all simulation, validation, and reporting code for testing the Resetability (R) principle — a mathematical property of 3D rotations that allows complex motion to be reversed using a scaled two-pass replay.

It demonstrates that the same geometric law holds across robotics, zero-gravity motion, spacecraft attitude control, and booster stabilization.

⚙️ Repository Structure
RforRoboticsandSpace/
│
├── demos/                     # Simulation and validation scripts
│   ├── robot_reset_pybullet.py
│   ├── robot_reset_free.py
│   ├── spacecraft_reset_demo.py
│   ├── booster_reset_demo.py
│   └── validate_resetability_cross_domain.py
│
├── python/                    # Core SO(3) math utilities
│   └── so3_reset.py
│
├── results/                   # Output data, plots, and reports
│   ├── robot_results.csv
│   ├── spacecraft/spacecraft_results.csv
│   ├── booster_full/logs/summary.csv
│   ├── correlation_summary.csv
│   ├── combined_R_vs_residual.png
│   ├── combined_R_vs_recovery.png
│   ├── report_resetability.pdf
│   └── Validation_Report_Resetability.docx
│
├── videos/                    # Simulation videos (optional)
│   ├── robot_reset_*.mp4
│   ├── spacecraft_reset_*.mp4
│   └── booster_reset_summary_*.mp4
│
├── README.md
├── LICENSE
└── requirements.txt

🔧 Installation

Install dependencies:

pip install -r requirements.txt

🧪 Demos and Usage
🤖 1. Robot Reset (with Gravity)

Visual robot stability test using PyBullet.

python demos/robot_reset_pybullet.py --gui --record


Description:

Simulates a cube (stand-in for a robot torso) under gravity.

Random torques disturb its orientation.

The script applies a λ-scaled two-pass reset and logs IMU data and recovery time.

Outputs:

logs/imu_log.csv, logs/reset_log.csv

results/robot_results.csv

optional videos/robot_reset_<timestamp>.mp4

🛰️ 2. Robot Reset (Zero-Gravity)

Floating-body reset in vacuum conditions.

python demos/robot_reset_free.py --gui --record


Description:

Disables gravity to emulate free-floating robotic platforms or satellites.

Uses torque bursts instead of contact forces.

Results appended to results/robot_results.csv with domain tag zeroG.

Outputs: videos/robot_reset_free_<timestamp>.mp4

🚀 3. Spacecraft Reset Simulation

ODE-based spacecraft attitude recovery under λ-scaled replays.

python demos/spacecraft_reset_demo.py --3d --record


Description:

Simulates a spacecraft rigid-body using quaternions.

Phase 1: disturbance torque pattern

Phase 2: scaled reset replay

Optional PyBullet 3D view (headless or GUI mode)

Outputs:

videos/spacecraft_reset_<timestamp>.mp4

results/spacecraft/spacecraft_results.csv

results/spacecraft_reset_plot_<timestamp>.png

🧯 4. Booster Monte-Carlo Simulation

Batch testing with and without reset controller (Reset Shim).

# Quick test (small batch)
python demos/booster_reset_demo.py --mode fast --thr 0.5 --out results/booster_fast

# Full validation (large batch, exported results)
python demos/booster_reset_demo.py --mode full --thr 1.0 --out results/booster_full


Description:

Runs hundreds of randomized booster attitude recoveries.

Compares baseline PID vs PID + Reset Shim.

Outputs:

results/booster_full/logs/summary.csv

Residual/error plots in plots/

videos/booster_reset_summary_<timestamp>.mp4

Exports results/booster_results.csv for validation script

🧮 5. Cross-Domain Validation

Aggregates results across all domains and computes correlations.

python demos/validate_resetability_cross_domain.py


Description:

Loads all robot, spacecraft, and booster results.

Computes Pearson correlations between R, residuals, and recovery time.

Generates:

results/report_resetability.pdf

results/Validation_Report_Resetability.docx

results/correlation_summary.csv

📊 Example Results
Domain	Corr(R,Residual)	Corr(R,RecoveryTime)
Booster	0.319	0.000
Gravity	0.547	0.000
Spacecraft	-0.363	0.055
Zero-G	0.133	0.764

Interpretation:

Gravity-bound systems show R–Residual correlation (predicts final stability).

Zero-G systems show R–Recovery correlation (predicts recovery duration).

Spacecraft exhibits moderate mixed correlation due to scaled inertia.

Boosters show weak correlation due to PID feedback dominance.

📘 Theory Summary

Resetability Principle:

Any arbitrary rotation sequence can be reversed by scaling each step by λ and replaying the entire sequence twice.

Formally:

𝑞
reset
=
(
∏
𝑘
exp
⁡
(
𝜆
𝜃
𝑘
𝑛
^
𝑘
)
)
(
∏
𝑘
exp
⁡
(
𝜆
𝜃
𝑘
𝑛
^
𝑘
)
)
q
reset
	​

=(
k
∏
	​

exp(λθ
k
	​

n
^
k
	​

))(
k
∏
	​

exp(λθ
k
	​

n
^
k
	​

))

and the Resetability index

𝑅
=
1
−
∣
𝑤
(
𝑞
reset
)
∣
R=1−∣w(q
reset
	​

)∣

Low R → near-perfect reversibility; high R → residual drift due to commutators.

🧬 Experimental Summary
Experiment	Environment	Behavior
robot_reset_pybullet.py	Gravity	Orientation recovery correlates with R
robot_reset_free.py	Zero-G	Recovery duration correlates with R
spacecraft_reset_demo.py	Space	λ-scaled reset reproduces two-pass reversibility
booster_reset_demo.py	Booster terminal phase	Reset Shim reduces residuals and improves stability
validate_resetability_cross_domain.py	Cross-domain	Confirms generality of R across physics regimes
🧾 Publications and Reports

results/report_resetability.pdf — Visual validation and correlation report

results/Validation_Report_Resetability.docx — Ready-to-publish document

Videos — Optional PyBullet or animated MP4 demonstrations

🪐 Scientific Impact

Resetability bridges geometry and control, unifying how systems recover from complex motion across:

Robotic balance and torque-based stabilization

Spacecraft attitude correction

Booster terminal attitude control

Any dynamic system evolving on SO(3)

🧾 License

Released under the MIT License (see LICENSE file).

📚 Citation

Cappuccini, Paolo & GPT-5.
Resetability on SO(3): A Two-Pass Scaled Replay Primitive for Fast Attitude Recovery in Robots and Spacecraft.
Independent Research, 2025.

🧠 GitHub Repository Description

Cross-domain validation of the Resetability (R) principle — a geometric control invariant bridging robotics, spacecraft, and booster dynamics.

⚙️ requirements.txt
numpy
matplotlib
pandas
pybullet
reportlab
python-docx